---
AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates the ECS cluster and Ethereum services in the cluster and the EC2 instances for the cluster.
Parameters:
  VPCID:
    Type: AWS::EC2::VPC::Id
  NetworkSubnetIDs:
    Type: List<AWS::EC2::Subnet::Id>
  ALBSubnetIDs:
    Type: List<AWS::EC2::Subnet::Id>
  NumberOfEthereumClients:
    Type: Number
  NumberOfEthereumMiners:
    Type: Number
  InitialAccountAddresses:
    Type: String
  MinerAccountAddress:
    Type: String
  NetworkID:
    Type: Number
  InitialBlockGasLimit:
    Type: Number
  BlockGasLimit:
    Type: Number
  EC2InstanceProfileArn:
    Type: String
  EC2KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  ECSRoleForALB:
    Type: String
  NumberOfEC2Instances:
    Type: Number
  EC2InstanceType:
    Type: String
  NestedTemplateOrigin:
    Type: String
  RootStackName:
    Type: String
  RunEthExplorer:
    Type: String
  RunEthStats:
    Type: String
  EthereumNodeLogLevel:
    Type: String
  ClusterName:
    Type: String
  EthereumDockerImage:
    Type: String
  EthExplorerDockerImage:
    Type: String
  EthStatsDockerImage:
    Type: String
  EthStatsSecret:
    Type: String
  InitialDifficulty:
    Type: Number
  InitialAccountBalance:
    Type: Number
  GasPriceFloor:
    Type: Number

Conditions:
  IsPublicNetwork:
    Fn::Or:
      - Fn::Equals:
        - Ref: NetworkID
        - 1
      - Fn::Equals:
        - Ref: NetworkID
        - 2
      - Fn::Equals:
        - Ref: NetworkID
        - 3
      - Fn::Equals:
        - Ref: NetworkID
        - 4

  EthExplorerCondition:
    Fn::Equals:
    - Ref: RunEthExplorer
    - "true"

  EthStatsCondition:
    Fn::Equals:
    - Ref: RunEthStats
    - "true"

Resources:

  DynamoPeerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 20
        WriteCapacityUnits: 20
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      IpAddressType: ipv4
      Scheme: internal
      Subnets:
        Ref: ALBSubnetIDs
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '50'
      SecurityGroups:
        - Ref: LoadBalancerSecurityGroup

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName:
        Ref: ClusterName

  ServiceAutoScalingGroupStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: ECSCluster
    Properties:
      TemplateURL: !Sub "${NestedTemplateOrigin}ethereum-autoscalegroup.template.yaml"
      Parameters:
        InstanceNames:
          Ref: ClusterName
        EC2KeyPairName:
          Ref: EC2KeyPairName
        NetworkSubnetIDs:
          Fn::Join:
            - ","
            - Ref: NetworkSubnetIDs
        NumberOfEC2Instances:
          Ref: NumberOfEC2Instances
        EC2SecurityGroup:
          Ref: EC2SecurityGroup
        EC2InstanceProfileArn:
          Ref: EC2InstanceProfileArn
        InstanceAMICode: AMZNECSOPTIMIZEDAMI
        EC2InstanceType:
          Ref: EC2InstanceType
        LaunchScriptText: !Sub "echo ECS_CLUSTER=${ClusterName} >> /etc/ecs/ecs.config"

  # ETHEREUM MINERS BEGIN

  GethMinerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - "-"
          - - Ref: ClusterName
            - "Miner"
      RetentionInDays: '120'

  GethMinerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family:
        Fn::Join:
          - "-"
          - - Ref: ClusterName
            - "Miner"
      NetworkMode: host
      ContainerDefinitions:
        - Name: GethMiner
          Cpu: '1024'
          Essential: 'true'
          Image: !Ref EthereumDockerImage
          Memory: '2048'
          MemoryReservation: '1024'
          PortMappings:
            - ContainerPort: '8545'
              HostPort: '8545'
              Protocol: tcp
            - ContainerPort: '8546'
              HostPort: '8546'
              Protocol: tcp
            - ContainerPort: '30303'
              HostPort: '30303'
              Protocol: tcp
            - ContainerPort: '30303'
              HostPort: '30303'
              Protocol: udp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region:
                Ref: AWS::Region
              awslogs-group:
                Fn::Join:
                  - "-"
                  - - Ref: ClusterName
                    - "Miner"
              awslogs-stream-prefix: ethereum-miner
          Environment:
            - Name: CONTAINER_PLATFORM
              Value: ecs
          Command:
            - Fn::If:
              - IsPublicNetwork
              - ""
              - "--nodiscover"
            - "--peer-table-name"
            - Ref: DynamoPeerTable
            - "--networkid"
            - Ref: NetworkID
            - "--initial-difficulty"
            - Ref: InitialDifficulty
            - "--log-level"
            - Ref: EthereumNodeLogLevel
            - "--rpc"
            - "--rpcapi"
            - "web3,net,eth"
            - "--mine"
            - "--minerthreads"
            - "1"
            - "--etherbase"
            - Ref: MinerAccountAddress
            - "--funded-accounts"
            - Ref: InitialAccountAddresses
            - "--targetgaslimit"
            - Ref: BlockGasLimit
            - "--initial-block-gas-limit"
            - Ref: InitialBlockGasLimit
            - "--initial-account-balance"
            - Ref: InitialAccountBalance
            - "--gasprice"
            - Ref: GasPriceFloor
            - Fn::If:
              - EthStatsCondition
              - Fn::Join:
                - " "
                - - "--ethstats-ws-url"
                  - Fn::Join:
                    - ""
                    - - "ws://"
                      - Fn::GetAtt: [ "LoadBalancer", "DNSName" ]
                  - "--ethstats-ws-secret"
                  - Ref: EthStatsSecret
              - ""

  EthereumMinerService:
    Type: AWS::ECS::Service
    DependsOn: ServiceAutoScalingGroupStack
    Properties:
      Cluster:
        Ref: ClusterName
      DesiredCount:
        Ref: NumberOfEthereumMiners
      ServiceName: EthereumMiner
      TaskDefinition:
        Ref: GethMinerTaskDefinition

  # ETHEREUM MINERS END
  # ETHEREUM CLIENTS BEGINS

  GethClientLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - "-"
          - - Ref: ClusterName
            - "Client"
      RetentionInDays: '120'

  GethClientTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family:
        Fn::Join:
          - "-"
          - - Ref: ClusterName
            - "Client"
      NetworkMode: host
      ContainerDefinitions:
        - Name: GethClient
          Cpu: '256'
          Essential: 'true'
          Image: !Ref EthereumDockerImage
          Memory: '1024'
          MemoryReservation: '256'
          PortMappings:
          - ContainerPort: '8545'
            HostPort: '8545'
            Protocol: tcp
          - ContainerPort: '8546'
            HostPort: '8546'
            Protocol: tcp
          - ContainerPort: '30303'
            HostPort: '30303'
            Protocol: tcp
          - ContainerPort: '30303'
            HostPort: '30303'
            Protocol: udp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region:
                Ref: AWS::Region
              awslogs-group:
                Fn::Join:
                  - "-"
                  - - Ref: ClusterName
                    - "Client"
              awslogs-stream-prefix: ethereum-client
          Environment:
          - Name: CONTAINER_PLATFORM
            Value: ecs
          Command:
            - Fn::If:
              - IsPublicNetwork
              - ""
              - "--nodiscover"
            - "--peer-table-name"
            - Ref: DynamoPeerTable
            - "--networkid"
            - Ref: NetworkID
            - "--initial-difficulty"
            - Ref: InitialDifficulty
            - "--log-level"
            - Ref: EthereumNodeLogLevel
            - "--rpc"
            - "--rpcapi web3,net,eth"
            - "--rpcaddr 0.0.0.0"
            - "--rpcvhosts *"
            - "--rpccorsdomain *"
            - "--ws"
            - "--wsapi web3,net,eth"
            - "--wsaddr 0.0.0.0"
            - "--wsport 8546"
            - "--wsorigins *"
            - "--initial-block-gas-limit"
            - Ref: InitialBlockGasLimit
            - "--initial-account-balance"
            - Ref: InitialAccountBalance
            - "--funded-accounts"
            - Ref: InitialAccountAddresses
            - "--gasprice"
            - Ref: GasPriceFloor
            - Fn::If:
              - EthStatsCondition
              - Fn::Join:
                - " "
                - - "--ethstats-ws-url"
                  - Fn::Join:
                    - ""
                    - - "ws://"
                      - Fn::GetAtt: [ "LoadBalancer", "DNSName" ]
                  - "--ethstats-ws-secret"
                  - Ref: EthStatsSecret
              - ""

  EthereumClientTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: LoadBalancer
    Properties:
      HealthCheckIntervalSeconds: 60
      UnhealthyThresholdCount: 10
      HealthCheckPath: /
      Port: 8545
      Protocol: HTTP
      VpcId:
        Ref: VPCID

  EthereumClientListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn: LoadBalancer
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref EthereumClientTargetGroup
      Port: 8545
      Protocol: HTTP

  EthereumClientService:
    Type: AWS::ECS::Service
    DependsOn: EthereumClientListener
    Properties:
      Cluster:
        Ref: ClusterName
      DesiredCount:
        Ref: NumberOfEthereumClients
      ServiceName: EthereumClient
      TaskDefinition:
        Ref: GethClientTaskDefinition
      LoadBalancers:
        - ContainerName: GethClient
          ContainerPort: 8545
          TargetGroupArn:
            Ref: EthereumClientTargetGroup
      Role:
        Ref: ECSRoleForALB

  # ETHEREUM CLIENTS END
  # ETHSTATS BEGINS

  EthStatsTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Condition: EthStatsCondition
    Properties:
      HealthCheckIntervalSeconds: 60
      UnhealthyThresholdCount: 10
      HealthCheckPath: /
      Port: 80
      Protocol: HTTP
      VpcId:
        Ref: VPCID

  EthStatsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Condition: EthStatsCondition
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref EthStatsTargetGroup
      Port: 80
      Protocol: HTTP

  EthStatsLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: EthStatsCondition
    Properties:
      LogGroupName:
        Fn::Join:
          - "-"
          - - Ref: ClusterName
            - "Stats"
      RetentionInDays: '120'

  EthStatsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Condition: EthStatsCondition
    Properties:
      Family:
        Fn::Join:
          - "-"
          - - Ref: ClusterName
            - "Stats"
      NetworkMode: host
      ContainerDefinitions:
        - Name: EthStatsWebService
          Cpu: '256'
          Essential: 'true'
          Image: !Ref EthStatsDockerImage
          Memory: '1024'
          MemoryReservation: '256'
          PortMappings:
          - ContainerPort: '80'
            HostPort: '80'
            Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region:
                Ref: AWS::Region
              awslogs-group:
                Fn::Join:
                  - "-"
                  - - Ref: ClusterName
                    - "Stats"
              awslogs-stream-prefix: eth-stats
          Environment:
            - Name: PORT
              Value: 80
            - Name: WS_SECRET
              Value:
                Ref: EthStatsSecret

  EthStatsService:
    Type: AWS::ECS::Service
    Condition: EthStatsCondition
    DependsOn: EthStatsListener
    Properties:
      Cluster:
        Ref: ClusterName
      DesiredCount: '1'
      ServiceName: EthereumStats
      TaskDefinition:
        Ref: EthStatsTaskDefinition
      LoadBalancers:
        - ContainerName: EthStatsWebService
          ContainerPort: 80
          TargetGroupArn: !Ref EthStatsTargetGroup
      Role:
        Ref: ECSRoleForALB

  # ETHSTATS ENDS
  # ETHEXPLORER BEGINS

  EthExplorerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Condition: EthExplorerCondition
    DependsOn: LoadBalancer
    Properties:
      HealthCheckIntervalSeconds: 60
      UnhealthyThresholdCount: 10
      HealthCheckPath: /
      Port: 8080
      Protocol: HTTP
      VpcId:
        Ref: VPCID

  EthExplorerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Condition: EthExplorerCondition
    DependsOn: LoadBalancer
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref EthExplorerTargetGroup
      Port: 8080
      Protocol: HTTP

  EthExplorerLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: EthExplorerCondition
    Properties:
      LogGroupName:
        Fn::Join:
          - "-"
          - - Ref: ClusterName
            - "Explorer"
      RetentionInDays: '120'

  EthExplorerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Condition: EthExplorerCondition
    Properties:
      Family:
        Fn::Join:
          - "-"
          - - Ref: ClusterName
            - "Explorer"
      NetworkMode: host
      ContainerDefinitions:
        - Name: EthExplorerWebService
          Cpu: '256'
          Essential: 'true'
          Image: !Ref EthExplorerDockerImage
          Memory: '1024'
          MemoryReservation: '256'
          PortMappings:
          - ContainerPort: '8080'
            HostPort: '8080'
            Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region:
                Ref: AWS::Region
              awslogs-group:
                Fn::Join:
                  - "-"
                  - - Ref: ClusterName
                    - "Explorer"
              awslogs-stream-prefix: ethereum-explorer
          Environment:
            - Name: PORT
              Value: 8080
            - Name: GETH_RPCPORT
              Value: 8545
            - Name: GETH_HOSTNAME
              Value:
                Fn::GetAtt: ["LoadBalancer", "DNSName"]

  EthExplorerService:
    Type: AWS::ECS::Service
    Condition: EthExplorerCondition
    DependsOn: EthExplorerListener
    Properties:
      Cluster:
        Ref: ClusterName
      DesiredCount: '1'
      ServiceName: EthereumExplorer
      LoadBalancers:
        - ContainerName: EthExplorerWebService
          ContainerPort: 8080
          TargetGroupArn: !Ref EthExplorerTargetGroup
      Role: !Ref ECSRoleForALB
      TaskDefinition:
        Ref: EthExplorerTaskDefinition

  # ETHEXPLORER ENDS

Outputs:
  LoadBalancerDNSName:
    Value:
      Fn::GetAtt: [ "LoadBalancer", "DNSName" ]